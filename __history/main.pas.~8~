unit main;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, jogabilidade, Peca,
  Vcl.StdCtrls;

type
  TForm1 = class(TForm)
    Panel1: TPanel;
    PaintBox: TPaintBox;
    Timer: TTimer;
    PanelMenu: TPanel;
    ButtonIniciar: TButton;
    Button1: TButton;
    ButtonSair: TButton;
    Button3: TButton;
    procedure PaintBoxPaint(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure ButtonIniciarClick(Sender: TObject);
    procedure ButtonSairClick(Sender: TObject);
    procedure TimerTimer(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    gameBoard: array[0..9, 0..19] of Integer;
    currentPiece: array[0..3, 0..3] of Integer;
    currentPieceX, currentPieceY: Integer;
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  fJogabilidade: TJogabilidade;
  fPeca: TPeca;
  fExistePecaGuardada: Boolean;
  fPosicaoX,fPosicaoY: Integer;

const
  CNT_VELOCIDADE = 1000;

implementation

{$R *.dfm}

procedure TForm1.ButtonIniciarClick(Sender: TObject);
begin
   fExistePecaGuardada := false;
   fJogabilidade.IniciarJogo;
end;

procedure TForm1.ButtonSairClick(Sender: TObject);
begin
   self.Close();
end;

procedure TForm1.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
   case key of
      38: fPeca.MoverPecaCima;
      40: fPeca.MoverPecaBaixo;
      39: fPeca.MoverPecaDireita;
      37: fPeca.MoverPecaEsqueda;
      76:
      begin
         fPeca.GuardarPeca;
         fExistePecaGuardada := true;
      end;
      74:
      begin
         if fExistePecaGuardada then
         begin
            fPeca.UtilizarPecaGuardada;
            fExistePecaGuardada := false;
         end;
      end;
   end;
   //ShowMessage(IntToStr(key));
end;

procedure TForm1.FormShow(Sender: TObject);
begin
   Timer.Interval := CNT_VELOCIDADE;
   Timer.Enabled := true;
   fPosicaoX := 0;
   fPosicaoY := 0;
end;

procedure TForm1.PaintBoxPaint(Sender: TObject);
var
  BlockSize: Integer;
  x, y: Integer;
begin
//  BlockSize := PaintBox1.Width div 10; // Tamanho dos blocos
//
//  // Desenha o tabuleiro
//  for y := 0 to 19 do
//  begin
//    for x := 0 to 9 do
//    begin
//      if gameBoard[x, y] <> 0 then
//        DrawPiece(x, y, gameBoard[x, y]);
//    end;
//  end;
//
//  // Desenha a peça atual
//  for y := 0 to 3 do
//  begin
//    for x := 0 to 3 do
//    begin
//      if currentPiece[x, y] <> 0 then
//        DrawPiece(currentPieceX + x, currentPieceY + y, currentPiece[x, y]);
//    end;
//  end;

//  DrawPiece(3, 5, 1);
//  DrawPiece(4, 5, 1);
//  DrawPiece(5, 5, 1);
//  DrawPiece(5, 6, 1);
end;
procedure TForm1.TimerTimer(Sender: TObject);
begin
   PaintBox.Canvas.FillRect(fPeca.CriarPeca(fPosicaoX, fPosicaoY, 1, PaintBox));
   Inc(fPosicaoX);
   Inc(fPosicaoY);
end;

end.
